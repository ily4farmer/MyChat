{"version":3,"sources":["Firebase/index.js","Components/Navbar/Navbar.js","Components/Form/Form.js","Components/Login/Login.js","Components/Register/Register.js","Routers/Utils.js","Routers/Index.js","Components/Home/Home.js","Components/Chat/Chat.js","Components/Loader/Loader.js","Components/Layout/Layout.js","App.js","Store/formReducer.js","Store/index.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","firestore","Navbar","user","className","onClick","signOut","Form","title","methodForm","dispatch","useDispatch","form","useSelector","state","action","onSubmit","Object","keys","map","item","label","onChange","e","formControls","target","type","test","value","email","emailValue","payload","length","password","passwordValue","formValidation","required","placeholder","Login","preventDefault","signInWithEmailAndPassword","then","response","catch","error","console","log","toString","Register","createUserWithEmailAndPassword","homeRouter","chatRouter","publicRouter","path","component","useState","switches","seTswitches","style","fontWeight","privatRouter","Loader","Layout","loading","exact","to","App","useAuthState","defaultState","reducer","combineReducers","store","createStore","composeWithDevTools","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f80cf817.chunk.js","sourcesContent":["\r\n\r\n\r\n\r\nimport firebase from 'firebase'\r\n\r\nfirebase.initializeApp({\r\n    apiKey: \"AIzaSyBfQBzoLibg1740oXi6i6fbOOeUbUbVJKM\",\r\n    authDomain: \"my-chat-41ee5.firebaseapp.com\",\r\n    projectId: \"my-chat-41ee5\",\r\n    storageBucket: \"my-chat-41ee5.appspot.com\",\r\n    messagingSenderId: \"396979646875\",\r\n    appId: \"1:396979646875:web:18fc23a51ad5321822313e\"\r\n});\r\n\r\n// модуль авторизации\r\nexport const auth = firebase.auth();\r\n// База данных\r\nexport const firestore = firebase.firestore();","\r\n\r\n\r\n\r\nimport React from 'react'\r\nimport { auth } from '../../Firebase';\r\nimport './Navbar.sass';\r\n\r\nexport default function Navbar({user}) {\r\n    \r\n    return (\r\n        <header className=\"header\">\r\n            <div className=\"container\">\r\n                <div className=\"header-block\">\r\n                    <div className=\"header__logo\">MyChat</div>\r\n                    {user ? \r\n                     <button onClick={()=> auth.signOut()} className=\"header__button btn\">Выйти</button>\r\n                    :\r\n                    // если пользователь авторизован, тогда появляется кнопка выйти \r\n                        <button className=\"header__button btn\">Логин</button>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n","\r\n\r\n\r\n\r\nimport React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport './Form.sass';\r\n\r\n\r\n\r\nexport default function Form({title, methodForm}) {\r\n\r\n    const dispatch = useDispatch();\r\n    const form = useSelector((state) => state.form);\r\n\r\n    const formValidation = (e) => {\r\n        let regexEmail = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        let formControls = {...form};\r\n\r\n        switch (true) {\r\n          case (e.target.type === 'email'):\r\n            if (regexEmail.test( e.target.value)) {\r\n                    formControls.email.emailValue = e.target.value;\r\n                    dispatch({type: \"state\", payload: formControls});\r\n                } else {\r\n                    formControls.email.emailValue = '';\r\n                    dispatch({type: \"state\", payload: formControls});\r\n                }\r\n                break;\r\n\r\n            case (e.target.type === 'password'):\r\n                if (e.target.value.length > 6) {\r\n                    formControls.password.passwordValue = e.target.value;\r\n                    dispatch({type: \"state\", payload: formControls});\r\n                } else {\r\n                    formControls.password.passwordValue = '';\r\n                    dispatch({type: \"state\", payload: formControls});\r\n                }\r\n                break;\r\n          default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form action=\"#\" className=\"form\" onSubmit={methodForm}>\r\n            <h2 className=\"form__template\">{title}</h2>\r\n            {\r\n                Object.keys(form).map((item) => {\r\n                    return (\r\n                        <label key={item}>\r\n                            <label className=\"form__label\">{form[item].label}</label>\r\n                            <input onChange={(e) => formValidation(e)} type={form[item].type} className=\"form__input\" required/>\r\n                        </label>\r\n                    );\r\n                })\r\n            }\r\n            <input type=\"submit\" placeholder=\"Регистрация\" className=\"form__input-btn btn\" />\r\n        </form>\r\n    )\r\n}\r\n","\r\n\r\n\r\n\r\nimport React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Form from '../Form/Form';\r\nimport firebase from 'firebase';\r\n\r\nexport default function Login() {\r\n\r\n    const dispatch = useDispatch();\r\n    const form = useSelector(state => state.form),\r\n          email = form.email.emailValue,\r\n          password = form.password.passwordValue;\r\n\r\n    const loginUser = (e) => {\r\n        e.preventDefault();\r\n        // Создание нового польователя\r\n        firebase.auth().signInWithEmailAndPassword(email, password)\r\n            .then((response) => {\r\n                // Signed in \r\n                return response;\r\n                // ...\r\n            })\r\n            .catch((error) => {\r\n                console.log('Error: ' + error.toString());\r\n            });\r\n        form.email.emailValue = '';\r\n        form.password.passwordValue = '';\r\n        dispatch({type: \"state\", payload: form});\r\n    }\r\n\r\n    const titleValue = 'Войти';\r\n\r\n    return (\r\n        <Form title={titleValue} methodForm={loginUser}/>\r\n    )\r\n}\r\n","\r\n\r\n\r\n\r\n\r\nimport React from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport Form from '../Form/Form';\r\nimport firebase from 'firebase'\r\n\r\nexport default function Register() {\r\n    const dispatch = useDispatch();\r\n    const form = useSelector(state => state.form),\r\n          email = form.email.emailValue,\r\n          password = form.password.passwordValue;\r\n\r\n    const createUser = (e) => {\r\n        e.preventDefault();\r\n        // Создание нового польователя\r\n        firebase.auth().createUserWithEmailAndPassword(email, password)\r\n            .then((response) => {\r\n                // Signed in \r\n                return response;\r\n                // ...\r\n            })\r\n            .catch((error) => {\r\n                console.log('Error: ' + error.toString());\r\n            });\r\n          form.email.emailValue = '';\r\n          form.password.passwordValue = '';\r\n          dispatch({type: \"state\", payload: form});\r\n    }\r\n\r\n    const titleValue = 'Регистрация';\r\n\r\n    return (\r\n        <Form title={titleValue} methodForm={createUser}/>\r\n    )\r\n}","\r\n\r\n\r\nexport const homeRouter = '/home';\r\nexport const chatRouter = '/chat';","\r\n\r\n\r\nimport Home from \"../Components/Home/Home\";\r\nimport Chat from '../Components/Chat/Chat';\r\nimport { chatRouter, homeRouter } from './Utils';\r\n\r\n\r\nexport const publicRouter = [\r\n    {\r\n        path: homeRouter,\r\n        component: Home\r\n    }\r\n]\r\n\r\n\r\nexport const privatRouter = [\r\n    {\r\n        path: chatRouter,\r\n        component: Chat\r\n    }\r\n]\r\n\r\n\r\n","\r\n\r\n\r\n\r\nimport React, { useState } from 'react';\r\nimport './Home.sass';\r\nimport Login from '../Login/Login';\r\nimport Register from '../Register/Register';\r\n\r\nexport default function Hone() {\r\n\r\n    const [switches, seTswitches] = useState(true);\r\n\r\n    return (\r\n        <section className=\"home\">\r\n            <div className=\"container\">\r\n                <div className=\"home-block\">\r\n                    <h1 className=\"home__title\">MYCHAT</h1>\r\n                    {/* Переключение с формы логина на регистрацию */}\r\n                    {switches ? <Login/> : <Register/>}\r\n                    <div className=\"home__footer\">\r\n                        <div className=\"home__link\" style={switches ? {fontWeight: \"bold\"} : {fontWeight: \"normal\"}} onClick={() => seTswitches(true)}>Войти</div>\r\n                        <div className=\"home__link\" style={switches ? {fontWeight: \"normal\"} : {fontWeight: \"bold\"}} onClick={() => seTswitches(false)}>Регистрация</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n","\r\n\r\n\r\n\r\nimport React from 'react';\r\nimport './Chat.sass';\r\n\r\nexport default function Chat() {\r\n    return (\r\n        <section className=\"chat\">\r\n            <div className=\"container\">\r\n                <div className=\"chat-block\">\r\n                    <div className=\"chat__window\"></div>\r\n                    <div className=\"chat__footer\">\r\n                        <input type=\"text\" className=\"chat__input\" />\r\n                        <button className=\"chat__btn btn\">Отправить</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n","\r\n\r\n\r\n\r\n\r\nimport React from 'react';\r\nimport './Loader.scss';\r\n\r\nexport default function Loader() {\r\n    return (\r\n        <div className=\"loader\">\r\n            <div className=\"lds-hourglass\"></div>\r\n        </div>\r\n    )\r\n}\r\n","\r\n\r\n\r\n\r\nimport React from 'react'\r\nimport { Redirect, Route, Switch } from 'react-router-dom';\r\nimport { publicRouter, privatRouter } from '../../Routers/Index';\r\nimport { chatRouter, homeRouter } from '../../Routers/Utils';\r\nimport Loader from '../Loader/Loader';\r\n\r\nexport default function Layout({user, loading}) {\r\n    \r\n    if (loading) {\r\n        return <Loader/>\r\n    }\r\n\r\n    return user ?\r\n        <Switch>\r\n                {\r\n                    privatRouter.map(({path, component}) => {\r\n                        return (\r\n                            <Route key={path} path={path} component={component} exact={true}/>\r\n                        )\r\n                    })\r\n                }\r\n                <Redirect to={chatRouter}/>\r\n            </Switch>\r\n        :\r\n        <Switch>\r\n        {\r\n            publicRouter.map(({path, component}) => {\r\n                return (\r\n                <Route key={path} path={path} component={component} exact={true}/>\r\n                )\r\n            })\r\n        }\r\n            <Redirect to={homeRouter}/>\r\n        </Switch>\r\n}\r\n","import React from 'react';\nimport { HashRouter } from 'react-router-dom';\nimport './App.sass';\nimport Navbar from './Components/Navbar/Navbar';\nimport Layout from './Components/Layout/Layout';\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport { auth } from './Firebase';\n\nfunction App() {\n  const [user, loading, error] = useAuthState(auth);\n\n\n  return (\n      <HashRouter>\n        <Navbar user={user}/>\n        <Layout user={user} loading={loading}/>\n      </HashRouter>\n  );\n}\n\nexport default App;\n","\r\n\r\n\r\n\r\nconst defaultState = {\r\n    email: {\r\n        emailValue: '',\r\n        type: 'email',\r\n        label: 'Введите email'\r\n    },\r\n    password: {\r\n        passwordValue: '',\r\n        type: 'password',\r\n        label: 'Введите password'\r\n    }\r\n}\r\n\r\nexport const formReducer = (state = defaultState, action) => {\r\n    switch (action.type) {\r\n        case 'state':\r\n            return {...state, ...action.payload};   \r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers, createStore } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport { formReducer } from \"./formReducer\";\r\n\r\n\r\n// Объединение всех имеющихся reducer\r\nconst reducer = combineReducers({\r\n    form: formReducer\r\n})\r\n\r\n\r\n\r\nexport const store = createStore(reducer, composeWithDevTools())","\n\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.sass';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { store } from './Store';\n\n\n\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);"],"sourceRoot":""}